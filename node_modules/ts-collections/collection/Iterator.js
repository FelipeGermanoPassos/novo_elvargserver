"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var IteratorResultImpl_1 = require('./IteratorResultImpl');
var AbstractIterator = (function () {
    function AbstractIterator(rawList) {
        this.rawList = rawList;
        this.index = 0;
    }
    /**
     * @override
     */
    AbstractIterator.prototype.next = function () {
        var currentIndex = this.index, done = ++this.index > this.rawList.getSize();
        return new IteratorResultImpl_1.IteratorResultImpl(done, this.getItem(this.rawList.getItem(currentIndex)));
    };
    return AbstractIterator;
}());
exports.AbstractIterator = AbstractIterator;
var DefaultIterator = (function (_super) {
    __extends(DefaultIterator, _super);
    function DefaultIterator(list) {
        _super.call(this, list);
        this.list = list;
    }
    /**
     * @override
     */
    DefaultIterator.prototype.getItem = function (currentValue) {
        return currentValue;
    };
    return DefaultIterator;
}(AbstractIterator));
exports.DefaultIterator = DefaultIterator;
var ArrayIterator = (function (_super) {
    __extends(ArrayIterator, _super);
    function ArrayIterator(array) {
        var _this = this;
        _super.call(this, {
            getSize: function () { return _this.array.length; },
            getItem: function (index) { return _this.array[index]; }
        });
        this.array = array;
    }
    return ArrayIterator;
}(DefaultIterator));
exports.ArrayIterator = ArrayIterator;
//# sourceMappingURL=Iterator.js.map