import { ICollection } from './ICollection';
import { Collection } from './Collection';
import { IComparator } from '../comparator/IComparator';
export declare class ArrayList<T> extends Collection<T> {
    private data;
    constructor(data?: Array<T>);
    /**
     * @override
     */
    get(index: number): T;
    /**
     * @override
     */
    addAll(items: ICollection<T>): ICollection<T>;
    /**
     * @override
     */
    add(item: T): ICollection<T>;
    /**
     * @override
     */
    addArray(items: Array<T>): ICollection<T>;
    /**
     * @override
     */
    insert(position: number, item: T): ICollection<T>;
    /**
     * @override
     */
    sort(comparator: IComparator<T>): ICollection<T>;
    /**
     * @override
     */
    removeAll(): ICollection<T>;
    /**
     * @override
     */
    remove(item: T): boolean;
    /**
     * @override
     */
    getIteratorInstance(): Iterator<T>;
    /**
     * @override
     */
    toArray(): Array<T>;
    /**
     * @override
     */
    getSize(): number;
}
